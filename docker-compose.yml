version: "3.9"

networks:

    khyber:

        external: false

        driver: bridge

volumes:

    timescaledb:

        external: false

    cerberus:

        external: false

    keycloak:

        external: false

services:

    keycloak:

        logging:

            driver: local

            options:
                max-size: "20m"
                max-file: "5"
                compress: "true"

        restart: unless-stopped

        networks:
            - khyber

        ports:
            - "8080:8080"

        container_name: keycloak

        volumes:
            - "keycloak:/tmp"

        image: jboss/keycloak:16.1.1

        environment:
            # - KEYCLOAK_USER=${USER_NAME}
            # - KEYCLOAK_PASSWORD=${PASSWORD}
            - DB_VENDOR=postgres
            - DB_ADDR=timescaledb
            - DB_PORT=5432
            - DB_DATABASE=${DATABASE_NAME}
            - DB_SCHEMA=public
            - DB_USER=${USER_NAME}
            - DB_PASSWORD=${PASSWORD}

        depends_on:
            - timescaledb

        profiles: ["all"]

    timescaledb:

        logging:

            driver: local

            options:
                max-size: "20m"
                max-file: "5"
                compress: "true"

        restart: unless-stopped

        networks:
            - khyber

        # ports:
            # - "${POSTGRESQL_PORTNUMBER:-5432}:5432"

        container_name: timescaledb

        volumes:
            - "timescaledb:${PGDATA}"

        build:
            context: ./timescaledb
            args:
                - TIMESCALEDB_VERSION=${TIMESCALEDB_VERSION}

        # image: timescale/timescaledb:${TIMESCALEDB_VERSION}
        image: irasus/timescaledb:${IRASUS_TIMESCALEDB_VERSION}

        environment:
            - POSTGRES_DB=${DATABASE_NAME}
            - POSTGRES_USER=${USER_NAME}
            - POSTGRES_PASSWORD=${PASSWORD}
            - TZ=${TZ}
            - PGDATA=${PGDATA}
            - POSTGRES_REPLICA_USER_NAME=${POSTGRES_REPLICA_USER_NAME}
            - POSTGRES_REPLICA_PASSWORD=${POSTGRES_REPLICA_PASSWORD}
            - POSTGRES_REPLICA_DESTINATION=timescaledb_1
            - POSTGRES_REPLICA_NAME=replica1
            - POSTGRES_REPLICA_COMMIT_SYNCHRONOUS=off
            - POSTGRESQL_PORTNUMBER=${POSTGRESQL_PORTNUMBER}
            - TS_TUNE_MAX_CONNS=200
            - TIMESCALEDB_TELEMETRY=off

        profiles: ["all"]

    _cerberus:

        logging:

            driver: local

            options:
                max-size: "20m"
                max-file: "5"
                compress: "true"

        restart: unless-stopped

        networks:
            - khyber

        container_name: cerberus

        volumes:
            # - "_cerberus:/goodenough"
            - "./cerberus:/goodenough"

        build:
            context: ./cerberus
            args:
                - PYTHON_VERSION=${PYTHON_VERSION}

        image: irasus/cerberus:${IRASUS_DEVELOPMENT_CERBERUS_VERSION}

        command: sh -c "
             python3 manage.py makemigrations &&
             python3 manage.py migrate &&
             python3 manage.py runserver 0.0.0.0:8000"

        # command: python manage.py runserver 0.0.0.0:8000

        environment:
            - TZ=${TZ}
            - DATABASE_SERVER_HOSTNAME=timescaledb
            - DATABASE_SERVER_PORTNUMBER=5432
            - DATABASE_SERVER_DATABASENAME=${DATABASE_NAME}
            - DATABASE_SERVER_USERNAME=${USER_NAME}
            - DATABASE_SERVER_PASSWORD=${PASSWORD}

        depends_on:
            - timescaledb
            - keycloak
            - redis

        profiles: ["all", "development/cerberus"]

    nginx:

        logging:

            driver: local

            options:
                max-size: "20m"
                max-file: "5"
                compress: "true"

        restart: on-failure

        networks:
            - khyber

        ports:
            - "${HTTP_PORTNUMBER:-80}:80"

        container_name: nginx

        volumes:
            - "./nginx/nginx.conf:/etc/nginx/nginx.conf"
            - "./nginx/services:/etc/nginx/conf.d/"

        # build:
        #     context: ./nginx
        #     args:
        #         - NGINX_VERSION=${NGINX_VERSION}

        image: nginx:${NGINX_VERSION}
        # image: irasus/nginx:${IRASUS_NGINX_VERSION}

        # environment:
            # - DOMAIN_NAME=${DOMAIN_NAME}
            # - SUBDOMAIN_PREFIX=${SUBDOMAIN_PREFIX}
            # - SUBDOMAIN_SUFFIX=${SUBDOMAIN_SUFFIX}

        depends_on:
            - _cerberus
            - cloudbeaver

        profiles: ["all"]

    cloudbeaver:

        logging:

            driver: local

            options:
                max-size: "20m"
                max-file: "5"
                compress: "true"

        restart: unless-stopped

        networks:
            - khyber

        # ports:
            # - "8978:8978"

        container_name: cloudbeaver

        volumes:
            - "./cloudbeaver/cloudbeaver.conf:/opt/cloudbeaver/workspace/.data/.cloudbeaver.runtime.conf"
            - "./cloudbeaver:/opt/cloudbeaver/workspace/GlobalConfiguration/.dbeaver"

        image: dbeaver/cloudbeaver:${CLOUDBEAVER_VERSION}

        environment:
            - CB_LOCAL_HOST_ADDR=0.0.0.0

        depends_on:
            - timescaledb

        profiles: ["all"]

    redis:

        logging:

            driver: local

            options:
                max-size: "20m"
                max-file: "5"
                compress: "true"

        restart: on-failure

        networks:
            - khyber

        container_name: redis

        volumes:
            - "./redis/redis.conf:/redis.conf"
            # - "redis:/data"

        image: redis:latest

        command: [ "redis-server", "/redis.conf" ]

        profiles: ["all"]
